@charset "UTF-8";
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
@import url("https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400;500;600;700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Shadows+Into+Light&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Inconsolata:wght@300;400;500;700&display=swap");
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

*,
*::before,
*::after {
  box-sizing: border-box; }

html {
  font-size: 16px; }

body {
  line-height: 1.625; }

a {
  color: inherit;
  text-decoration: none;
  transition: color 0.3s; }

img {
  max-width: 100%;
  height: auto; }

.display {
  display: none; }

.container {
  max-width: 90vw;
  margin: 0 auto;
  padding-top: 15px; }

.header {
  background: linear-gradient(to bottom, rgba(30, 32, 34, 0.8) 0%, rgba(82, 97, 107, 0.5) 50%, rgba(240, 245, 249, 0.9) 100%), url("../image/963.jpg") center center/cover no-repeat;
  height: 600px; }
  .header .menu {
    display: flex;
    justify-content: space-between;
    flex-direction: row;
    flex-wrap: no-wrap;
    position: fixed;
    width: 100%;
    padding: 10px 30px;
    z-index: 998;
    background: rgba(30, 32, 34, 0.6); }
    .header .menu img {
      width: 80px; }
    .header .menu i {
      padding-top: 30px;
      font-size: 3em;
      cursor: pointer;
      color: #f0f5f9; }
  .header .nav {
    position: fixed;
    top: -600px;
    right: -600px;
    height: 1200px;
    width: 1200px;
    background: #1e2022;
    border-radius: 100%;
    z-index: 9999; }
    .header .nav i {
      position: fixed;
      top: 45px;
      right: 45px;
      font-size: 2em;
      color: #f0f5f9;
      cursor: pointer; }
    .header .nav__links {
      display: flex;
      justify-content: center;
      flex-direction: column;
      flex-wrap: nowrap;
      height: 230px; }
      .header .nav__links :first-child {
        top: 75px;
        -webkit-animation-timing-function: ease-in;
                animation-timing-function: ease-in; }
      .header .nav__links :nth-child(2) {
        top: 175px;
        -webkit-animation-timing-function: linear;
                animation-timing-function: linear; }
      .header .nav__links :nth-child(3) {
        top: 275px;
        -webkit-animation-timing-function: ease;
                animation-timing-function: ease; }
      .header .nav__links :nth-child(4) {
        top: 375px;
        -webkit-animation-timing-function: ease-in-out;
                animation-timing-function: ease-in-out; }
      .header .nav__links a {
        position: fixed;
        right: 35px;
        color: #f0f5f9;
        font-size: 2em;
        font-family: "Inconsolata", monospace;
        font-weight: 700;
        text-transform: capitalize;
        letter-spacing: .2rem;
        text-align: left;
        -webkit-animation: mymove 1s;
                animation: mymove 1s;
        transition: color 0.3s; }
        .header .nav__links a:hover {
          color: #52616b; }

@-webkit-keyframes mymove {
  from {
    right: 275px;
    font-size: 0em; }
  to {
    right: 35px;
    font-size: 2em; } }

@keyframes mymove {
  from {
    right: 275px;
    font-size: 0em; }
  to {
    right: 35px;
    font-size: 2em; } }
  .header__text {
    color: #f0f5f9;
    font-family: "Inconsolata", monospace;
    padding-top: 80px; }
    .header__text h1 {
      font-size: 3rem;
      margin: 15px; }
    .header__text blockquote {
      max-width: 500px;
      font-size: 1.5rem;
      padding: 15px;
      background: transparent;
      border-radius: 20px;
      margin: 0 0 0 50px; }
  .header__btn {
    font-family: "Inconsolata", monospace;
    margin-top: 50px; }
    .header__btn a {
      box-shadow: inset 0px 0px 20px 10px rgba(30, 32, 34, 0.8);
      padding: 15px 30px;
      color: #f0f5f9;
      font-size: 1.2em;
      margin: 0 20px; }

@media (max-width: 1440px) {
  .menu {
    margin: 0 15Px; } }

@media (max-width: 610px) {
  .header__text h1 {
    font-size: 2.2rem; }
  .header__text blockquote {
    font-size: 1rem; }
  .header__btn {
    margin-top: 25px; }
    .header__btn a {
      display: block;
      margin-top: 10px;
      text-align: center; } }

.portfolio {
  padding: 10px 0 40px 0; }
  .portfolio__container {
    max-width: 1024px;
    margin: 0 auto;
    padding: 0 20px; }

.block {
  margin-bottom: 100px;
  font-family: 'Courier New', Courier, monospace; }
  .block__img {
    border: 2px solid #1e2022;
    max-width: 750px;
    margin: 0 auto; }
    .block__img img {
      display: block;
      position: relative;
      z-index: 1; }
  .block__text a {
    color: #52616b;
    font-size: 1.4em;
    font-weight: 700; }
    .block__text a:hover {
      text-decoration: underline; }
    .block__text a::after {
      content: '   >>'; }
  .block__title {
    font-size: 1.75rem;
    letter-spacing: 2px;
    line-height: 1.1;
    color: #1e2022;
    font-weight: 700;
    margin: 0; }
    .block__title::before {
      content: '';
      width: 24px;
      height: 3px;
      background: #52616b;
      display: block;
      margin-bottom: 10px; }
  .block p {
    font-size: 1.2rem; }

@media only screen and (min-width: 900px) {
  .portfolio {
    background: linear-gradient(to bottom, rgba(240, 245, 249, 0.9) 0%, rgba(82, 97, 107, 0.5) 50%, rgba(30, 32, 34, 0.6) 100%), url("../image/smoke.png") no-repeat top 100Px right -200px, url("../image/smoke.png") no-repeat top 750Px left -200px;
    background-size: cover, 700px 850px, 500px 650px; }
  .block__left, .block__right {
    display: flex;
    justify-content: space-between;
    align-items: center; }
  .block .block__img {
    width: 500px;
    border: none;
    position: relative; }
    .block .block__img::before {
      content: '';
      display: block;
      border: 2px solid #1e2022;
      position: absolute;
      width: 100%;
      height: 100%;
      z-index: 0; }
  .block__left .block__img {
    margin-left: 30px; }
    .block__left .block__img::before {
      top: -30px;
      right: 30px; }
  .block__left .block__text {
    margin-left: 20px;
    width: 350px;
    flex: none; }
  .block__right .block__img {
    margin-right: 30px; }
    .block__right .block__img::before {
      top: -30px;
      left: 30px; }
  .block__right .block__text {
    margin-right: 20px;
    order: -1;
    width: 350px;
    flex: none; }
  .block a {
    margin-top: 20px; } }

*::after,
*::before {
  box-sizing: inherit; }

pre {
  margin: 0; }

.main__propos {
  background: rgba(0, 0, 0, 0.87); }

.code {
  overflow: hidden;
  text-align: left;
  font-size: 14px;
  white-space: pre-wrap; }
  .code__propos {
    padding-left: 100Px;
    color: rgba(240, 245, 249, 0.5); }
    .code__propos code {
      counter-reset: code_ligne; }
  .code__ligne {
    position: relative;
    display: inline-table;
    padding-left: 3ch; }
    .code__ligne--vide {
      color: transparent; }
  .code__ligne::before {
    content: counter(code_ligne) "\a●\a●\a●\a●\a●\a●\a●\a●\a●\a●";
    counter-increment: code_ligne;
    display: inline-block;
    position: absolute;
    width: 3ch;
    top: 0;
    bottom: 0;
    left: -1ch;
    overflow: hidden;
    text-align: right; }
  .code__var {
    color: #F13E30; }
    .code__var::before {
      content: ""; }
    .code__var::after {
      content: " :"; }
  .code__value {
    color: #c9d6df; }
    .code__value::before {
      content: ' "'; }
    .code__value::after {
      content: '",'; }
  .code__cle {
    color: #52616b; }
    .code__cle::before {
      content: '"'; }
    .code__cle::after {
      content: '" :'; }
  .code__braket1 {
    color: blue; }
    .code__braket1::after {
      content: "{"; }
  .code__braket2 {
    color: blue; }
    .code__braket2::after {
      content: "}"; }

@media (max-width: 1024px) {
  .code__propos {
    padding: 10px 20px; } }
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
